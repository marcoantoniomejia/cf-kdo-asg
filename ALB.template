AWSTemplateFormatVersion: 2010-09-09
Description: ALB.template - Elastic Load Balancer v2 (Application Load Balancer) template.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Parameters:
          - DeletionProtection
          - EnableRedirecttoHTTPS
          - Http2Enabled
          - LoadBalancerName
          - LoadBalancerNameVersion
          - Scheme
          - SecurityGroupList
          - Subnets
          - TimeOut
          - VPCID
        Label:
          default:
            - Application Load Balancer General Configuration
      - Parameters:
          - EnableListener1
          - Listener1Port
          - Listener1Protocol
          - Listener1SSL
          - Listener1SSLPolicy
        Label:
          default:
            - 'Listener 1 Configuration:'
      - Parameters:
          - EnableListener2
          - Listener2Port
          - Listener2Protocol
          - Listener2SSL
          - Listener2SSLPolicy
        Label:
          default:
            - 'Listener 2 Configuration:'
      - Parameters:
          - CreateLoggingBucket
          - LogAccessControl
          - LogRetention
          - S3BucketName
          - S3BucketPrefix
        Label:
          default:
            - S3 Logging Configuration (OPTIONAL)
      - Parameters:
          - MatcherCode
          - TargetGroupName
        Label:
          default:
            - Default Target Group Main Configuration
      - Parameters:
          - AttributeDelayTimeout
          - AttributeStickinessEnabled
          - CookieDuration
          - TargetGroupPort
          - TargetGroupProtocol
        Label:
          default:
            - Default Target Group General Configuration
      - Parameters:
          - HealthCheckIntervalSeconds
          - HealthCheckPath
          - HealthCheckPort
          - HealthCheckProtocol
          - HealthCheckTimeoutSeconds
          - HealthyThresholdCount
          - UnhealthyThresholdCount
        Label:
          default:
            - Default Target Group Health Monitoring Configuration
      - Parameters:
          - TargetGroupTargetId1
          - TargetGroupTargetId2
          - TargetGroupTargetId3
          - TargetGroupTargetPort1
          - TargetGroupTargetPort2
          - TargetGroupTargetPort3
        Label:
          default:
            - Default Target Group Instance Target Configuration (OPTIONAL)
      - Parameters:
          - InternalRecordName
          - InternalZoneId
          - InternalZoneName
        Label:
          default: Internal DNS Configuration
      - Parameters:
          - Environment
        Label:
          default: Basic Configuration
      - Parameters:
          - EnableRackspaceTicket
        Label:
          default: Monitoring Configuration
    ParameterLabels:
      LoadBalancerName:
        default: Load balancer name
      Scheme:
        default: Load balancer Scheme
      VPCID:
        default: VPC id
      SecurityGroupList:
        default: Security groups
      Subnets:
        default: Load Balancer Subnets
      TimeOut:
        default: Load balancer timeout
      DeletionProtection:
        default: ALB Deletion Protection
      Listener1Port:
        default: Listener 1 port
      Listener1Protocol:
        default: Listener 1 protocol
      Listener1SSL:
        default: Listener 1 SSL Certificate ARN
      Listener1SSLPolicy:
        default: Listener 1 SSL policy
      Listener2Port:
        default: Listener 2 port
      Listener2Protocol:
        default: Listener 2 protocol
      Listener2SSL:
        default: Listener 2 SSL Certificate ARN
      Listener2SSLPolicy:
        default: Listener 2 SSL policy
      CreateLoggingBucket:
        default: New S3 logging bucket
      S3BucketName:
        default: S3 bucket name
      LogAccessControl:
        default: S3 log access control
      S3BucketPrefix:
        default: S3 bucket prefix
      TargetGroupName:
        default: Default Target Group name
      MatcherCode:
        default: Default Target Group match code
      TargetGroupPort:
        default: Default Target Group port
      TargetGroupProtocol:
        default: Default Target Group protocol
      CookieDuration:
        default: Cookie duration
      AttributeStickinessEnabled:
        default: Stickiness enabled
      AttributeDelayTimeout:
        default: Deregistration delay
      HealthyThresholdCount:
        default: Healthy threshold count
      HealthCheckPath:
        default: Health check path
      UnhealthyThresholdCount:
        default: Unhealthy threshold count
      HealthCheckTimeoutSeconds:
        default: Health check timeout
      HealthCheckProtocol:
        default: Health check protocol
      HealthCheckPort:
        default: Health check port
      HealthCheckIntervalSeconds:
        default: Health check interval
      TargetGroupTargetId1:
        default: Instance target 1
      TargetGroupTargetPort1:
        default: Instance target 1 port
      TargetGroupTargetId2:
        default: Instance target 2
      TargetGroupTargetPort2:
        default: Instance target 2 port
      TargetGroupTargetId3:
        default: Instance target 3
      TargetGroupTargetPort3:
        default: Instance target 3 port
  Jetstream:
    Commit: 755c180b9dd28944d96431693011aec87957cbc4
    Date: '2021-01-05 15:01'
Parameters:
  LoadBalancerName:
    AllowedPattern: '^([a-zA-Z0-9]+-*)*[a-zA-Z0-9]$'
    ConstraintDescription: >-
      Must be at most 32 characters in length, must contain only alphanumeric
      characters or hyphens, and must not begin or end with a hyphen.
    MaxLength: 32
    Default: ALB-LoadBalancer-Name
    Type: String
    Description: >-
      A name for the load balancer, which must be unique within your AWS
      account.
  LoadBalancerNameVersion:
    Default: v00
    Type: String
    Description: 'NOTE: This needs to increment on update with new ALB.'
  Scheme:
    Default: internet-facing
    Type: String
    Description: Indicates whether the load balancer is Internet-facing or internal.
    AllowedValues:
      - internet-facing
      - internal
  Environment:
    AllowedValues:
      - Development
      - Integration
      - PreProduction
      - Production
      - QA
      - Staging
      - Test
    Default: Development
    Description: >-
      Application environment for which this network is being created. e.g.
      Development/Production.
    Type: String
  VPCID:
    Type: 'AWS::EC2::VPC::Id'
    Description: The VPC in which your targets are located.
  SecurityGroupList:
    Description: A list of EC2 security groups to assign to this resource.
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
  Subnets:
    Description: >-
      A list of at least two IDs of the subnets to associate with the load
      balancer.
    Type: 'List<AWS::EC2::Subnet::Id>'
  TimeOut:
    Default: '60'
    Type: Number
    Description: >-
      The idle timeout value, in seconds. The valid range is 1-3600. The default
      is 60 seconds.
    MaxValue: '3600'
    MinValue: '1'
  DeletionProtection:
    Default: 'false'
    ConstraintDescription: Value must be either lowercase true or false.
    Type: String
    Description: Indicates whether deletion protection is enabled for this Load Balancer.
    AllowedValues:
      - 'true'
      - 'false'
  Http2Enabled:
    Default: 'true'
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Description: Indicates whether HTTP/2 is enabled.
  EnableRedirecttoHTTPS:
    Default: 'false'
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Description: >-
      Enables redirect config rules from HTTP to HTTPS if HTTPS is enabled on
      the listener. To override just add a lower priorty rule.
  EnableListener1:
    Default: 'True'
    Type: String
    Description: Enable Primary Listener on the Load Balancer
    AllowedValues:
      - 'True'
      - 'False'
  Listener1Port:
    Default: 80
    Type: Number
    Description: The port on which the listener listens for requests.
  Listener1Protocol:
    Default: HTTP
    Type: String
    Description: The protocol that clients must use to send requests to the listener.
    AllowedValues:
      - HTTP
      - HTTPS
  Listener1SSL:
    Default: ''
    Type: String
    Description: >-
      The Amazon Resource Name (ARN) of the default certificate(s) to associate
      with listener 1. To apply additional certificates, please use the
      ALB_ListenerCertificate.template (OPTIONAL)
  Listener1SSLPolicy:
    AllowedPattern: '^$|^ELBSecurityPolicy-[a-zA-Z0-9\-]+$'
    ConstraintDescription: Must be a valid security policy or an empty string.
    Default: ''
    Type: String
    Description: >-
      The security policy that defines which ciphers and protocols are
      supported. The default is the current predefined security policy. More
      information:
      http://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies.
  EnableListener2:
    Default: 'False'
    Type: String
    Description: Enable Primary Listener on the Load Balancer
    AllowedValues:
      - 'True'
      - 'False'
  Listener2Port:
    Default: 443
    Type: Number
    Description: The port on which the listener listens for requests.
  Listener2Protocol:
    Default: HTTPS
    Type: String
    Description: The protocol that clients must use to send requests to the listener.
    AllowedValues:
      - HTTP
      - HTTPS
  Listener2SSL:
    Default: ''
    Type: String
    Description: >-
      The Amazon Resource Name (ARN) of the default certificate(s) to associate
      with listener 2. To apply additional certificates, please use the
      ALB_ListenerCertificate.template (OPTIONAL)
  Listener2SSLPolicy:
    AllowedPattern: '^$|^ELBSecurityPolicy-[a-zA-Z0-9\-]+$'
    ConstraintDescription: Must be a valid security policy or an empty string.
    Default: ELBSecurityPolicy-TLS-1-2-2017-01
    Type: String
    Description: >-
      The security policy that defines which ciphers and protocols are
      supported. The default is the current predefined security policy. More
      information:
      http://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies.
  CreateLoggingBucket:
    Default: 'true'
    Type: String
    Description: Create a new S3 logging bucket.
    AllowedValues:
      - 'true'
      - 'false'
  S3BucketName:
    Default: ''
    Type: String
    Description: >-
      The name of the S3 bucket for the access logs. The bucket name can contain
      only lowercase letters, numbers, periods (.), and dashes (-).
    AllowedPattern: '^$||^([a-z0-9]+[\.\-]?[a-z0-9]*)+[a-z0-9.]$'
    ConstraintDescription: >-
      The bucket name must contain only lowercase letters, numbers, periods (.),
      and dashes (-).
  LogAccessControl:
    Default: BucketOwnerFullControl
    ConstraintDescription: >-
      Must be either AuthenticatedRead, AwsExecRead, BucketOwnerRead,
      BucketOwnerFullControl, LogDeliveryWrite, Private, PublicRead or
      PublicReadWrite.
    Type: String
    Description: Define ACL for Bucket.
    AllowedValues:
      - AuthenticatedRead
      - AwsExecRead
      - BucketOwnerRead
      - BucketOwnerFullControl
      - LogDeliveryWrite
      - Private
      - PublicRead
      - PublicReadWrite
  S3BucketPrefix:
    Default: ''
    Type: String
    Description: >-
      The prefix for the location in the S3 bucket. If you don't specify a
      prefix, the access logs are stored in the root of the bucket.
  LogRetention:
    Default: '14'
    Type: Number
    Description: >-
      The number of days to retain load balancer logs.  Parameter is ignored if
      not creating a new S3 bucket.
    MaxValue: '999'
    MinValue: '1'
  InternalZoneName:
    Default: ''
    Description: TLD for Internal Hosted Zone
    Type: String
  InternalZoneId:
    Default: ''
    Description: The Route53 Internal Hosted Zone ID
    Type: String
  InternalRecordName:
    Default: ''
    Description: Record Name for the new Resource Record in the Internal Hosted Zone
    Type: String
  DefaultBucketEncryption:
    Default: AES256
    Type: String
    Description: Enable default bucket encryption
    AllowedValues:
      - Disabled
      - AES256
      - 'aws:kms'
  TargetGroupName:
    AllowedPattern: '^([a-zA-Z0-9]+-?)*[a-zA-Z0-9]$'
    ConstraintDescription: >-
      Must contain only alphanumeric characters or hyphens.  Value must not
      begin or end with a hyphen or have two adjacent hypens .
    Default: ALB-TargetGroup
    Type: String
    Description: A name for the Default Target Group.
  MatcherCode:
    AllowedPattern: '^([2-4][0-9]{2}[,\-])*[2-4][0-9]{2}$'
    ConstraintDescription: >-
      The HTTP codes between 200 and to use when checking for a successful
      response from a target. You can specify multiple values (for example,
      "200,202") or a range of values (for example, "200-299").
    Default: 200-299
    Type: String
    Description: The HTTP codes. The default value is 200.
  TargetGroupPort:
    Default: '80'
    Type: Number
    Description: The port on which the targets receive traffic.
    MaxValue: '65535'
    MinValue: '1'
  TargetGroupProtocol:
    Default: HTTP
    Type: String
    Description: The protocol to use for routing traffic to the targets.
    AllowedValues:
      - HTTP
      - HTTPS
  CookieDuration:
    Default: '86400'
    Type: Number
    Description: >-
      The time period, in seconds, during which requests from a client should be
      routed to the same target.
    MaxValue: '604800'
    MinValue: '1'
  AttributeStickinessEnabled:
    Default: 'false'
    ConstraintDescription: Value must be either lowercase true or false.
    Type: String
    Description: Indicates whether sticky sessions are enabled.
    AllowedValues:
      - 'true'
      - 'false'
  AttributeDelayTimeout:
    Default: '30'
    Type: Number
    Description: >-
      The amount time for Elastic Load Balancing to wait before changing the
      state of a deregistering target from draining to unused.
    MaxValue: '3600'
    MinValue: '0'
  HealthyThresholdCount:
    Default: '5'
    Type: Number
    Description: >-
      The number of consecutive successful health checks that are required
      before an unhealthy target is considered healthy.
    MaxValue: '10'
    MinValue: '2'
  HealthCheckPath:
    AllowedPattern: ^/.*$
    ConstraintDescription: >-
      Must begin with a '/' character, and can be at most 1024 characters in
      length.
    Default: /
    Type: String
    Description: >-
      The ping path destination where Elastic Load Balancing sends health check
      requests.
    MaxLength: '1024'
  UnhealthyThresholdCount:
    Default: '2'
    Type: Number
    Description: >-
      The number of consecutive failed health checks that are required before a
      target is considered unhealthy.
    MaxValue: '10'
    MinValue: '2'
  HealthCheckTimeoutSeconds:
    Default: '5'
    Type: Number
    Description: >-
      The number of seconds to wait for a response before considering that a
      health check has failed.
    MaxValue: '60'
    MinValue: '2'
  HealthCheckProtocol:
    Default: HTTP
    Type: String
    Description: >-
      The protocol that the load balancer uses when performing health checks on
      the targets, such as HTTP or HTTPS.
    AllowedValues:
      - HTTP
      - HTTPS
  HealthCheckPort:
    AllowedPattern: '^traffic-port$||^[0-9]+$'
    ConstraintDescription: Must be a valid TCP port or the value "traffic-port"
    Default: traffic-port
    Type: String
    Description: >-
      The port the load balancer uses when performing health checks on targets.
      The default is traffic-port, which is the port on which each target
      receives traffic from the load balancer.
  HealthCheckIntervalSeconds:
    Default: '30'
    Type: Number
    Description: >-
      The approximate number of seconds between health checks for an individual
      target.
    MaxValue: '300'
    MinValue: '5'
  TargetGroupTargetId1:
    AllowedPattern: '^i-[0-9a-f]{8}$||^i-[0-9a-f]{17}$||^$'
    ConstraintDescription: Must be a valid EC2 instance ID
    Default: ''
    Type: String
    Description: 'The ID of the target, such as an EC2 instance ID.'
  TargetGroupTargetPort1:
    Default: '80'
    Type: Number
    Description: The port number on which the target is listening for traffic.
    MaxValue: '65535'
    MinValue: '1'
  TargetGroupTargetId2:
    AllowedPattern: '^i-[0-9a-f]{8}$||^i-[0-9a-f]{17}$||^$'
    ConstraintDescription: Must be a valid EC2 instance ID
    Default: ''
    Type: String
    Description: 'The ID of the target, such as an EC2 instance ID.'
  TargetGroupTargetPort2:
    Default: '80'
    Type: Number
    Description: The port number on which the target is listening for traffic.
    MaxValue: '65535'
    MinValue: '1'
  TargetGroupTargetId3:
    AllowedPattern: '^i-[0-9a-f]{8}$||^i-[0-9a-f]{17}$||^$'
    ConstraintDescription: Must be a valid EC2 instance ID
    Default: ''
    Type: String
    Description: 'The ID of the target, such as an EC2 instance ID.'
  TargetGroupTargetPort3:
    Default: '80'
    Type: Number
    Description: The port number on which the target is listening for traffic.
    MaxValue: '65535'
    MinValue: '1'
  EnableRackspaceTicket:
    AllowedValues:
      - 'False'
      - 'True'
    Default: 'False'
    Description: Specifies whether alarms will generate Rackspace tickets
    Type: String
Conditions:
  isInternalHostedZoneIdProvided: !Not 
    - !Equals 
      - !Ref InternalZoneId
      - ''
  isInternal: !Equals 
    - !Ref Scheme
    - internal
  Listener1Enabled: !Equals 
    - !Ref EnableListener1
    - 'True'
  Listener1Certs: !Not 
    - !Equals 
      - !Ref Listener1SSL
      - ''
  SSLPolicy1: !Not 
    - !Equals 
      - !Ref Listener1SSLPolicy
      - ''
  EnableRedirectListener1HTTPS: !And 
    - !Condition Listener1Enabled
    - !Equals 
      - !Ref Listener1Protocol
      - HTTP
    - !Equals 
      - !Ref EnableRedirecttoHTTPS
      - 'true'
  Listener2Enabled: !Equals 
    - !Ref EnableListener2
    - 'True'
  Listener2Certs: !Not 
    - !Equals 
      - !Ref Listener2SSL
      - ''
  SSLPolicy2: !Not 
    - !Equals 
      - !Ref Listener2SSLPolicy
      - ''
  EnableRedirectListener2HTTPS: !And 
    - !Condition Listener2Enabled
    - !Equals 
      - !Ref Listener2Protocol
      - HTTP
    - !Equals 
      - !Ref EnableRedirecttoHTTPS
      - 'true'
  S3LogsEnabled: !Or 
    - !Condition BucketNameSet
    - !Condition NewS3Bucket
  NewS3Bucket: !Equals 
    - !Ref CreateLoggingBucket
    - 'true'
  BucketNameSet: !Not 
    - !Equals 
      - !Ref S3BucketName
      - ''
  UseLBNameVersion: !Not 
    - !Equals 
      - !Ref LoadBalancerNameVersion
      - ''
  EnableDefaultEncryption: !Not 
    - !Equals 
      - !Ref DefaultBucketEncryption
      - Disabled
  UseTarget1: !Not 
    - !Equals 
      - !Ref TargetGroupTargetId1
      - ''
  UseTarget2: !Not 
    - !Equals 
      - !Ref TargetGroupTargetId2
      - ''
  UseTarget3: !Not 
    - !Equals 
      - !Ref TargetGroupTargetId3
      - ''
  RackspaceAlarmsEnabled: !Equals 
    - !Ref EnableRackspaceTicket
    - 'True'
Mappings:
  LogAccountIds:
    us-east-1:
      accountid: '127311923021'
    us-east-2:
      accountid: 033677994240
    us-west-1:
      accountid: 027434742980
    us-west-2:
      accountid: '797873946194'
    ca-central-1:
      accountid: '985666609251'
    eu-west-1:
      accountid: '156460612806'
    eu-central-1:
      accountid: 054676820928
    eu-west-2:
      accountid: '652711504416'
    eu-west-3:
      accountid: 009996457667
    ap-northeast-1:
      accountid: '582318560864'
    ap-northeast-2:
      accountid: '600734575887'
    ap-southeast-1:
      accountid: '114774131450'
    ap-southeast-2:
      accountid: '783225319266'
    ap-south-1:
      accountid: '718504428378'
    sa-east-1:
      accountid: '507241528517'
    us-gov-west-1:
      accountid: 048591011584
    cn-north-1:
      accountid: '638102146993'
Resources:
  S3BucketwithLogging:
    Properties:
      AccessControl: !Ref LogAccessControl
      BucketName: !If 
        - BucketNameSet
        - !Ref S3BucketName
        - !Ref 'AWS::NoValue'
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            ExpirationInDays: !Ref LogRetention
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Ref 'AWS::StackName'
        - Key: ServiceProvider
          Value: Rackspace
      BucketEncryption: !If 
        - EnableDefaultEncryption
        - ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: !Ref DefaultBucketEncryption
        - !Ref 'AWS::NoValue'
    Type: 'AWS::S3::Bucket'
    Condition: NewS3Bucket
  ELBS3LoggingBucketPolicy:
    Properties:
      Bucket: !Ref S3BucketwithLogging
      PolicyDocument:
        Version: 2008-10-17
        Statement:
          - Action:
              - 's3:PutObject'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${S3BucketwithLogging}/*'
            Principal:
              AWS:
                - !FindInMap 
                  - LogAccountIds
                  - !Ref 'AWS::Region'
                  - accountid
            Sid: ELBAccessLogs20130930
    Type: 'AWS::S3::BucketPolicy'
    Condition: NewS3Bucket
  ELBv2:
    Properties:
      Subnets: !Ref Subnets
      Name: !Join 
        - '-'
        - - !Ref LoadBalancerName
          - !If 
            - UseLBNameVersion
            - !Ref LoadBalancerNameVersion
            - !Ref 'AWS::NoValue'
      Tags:
        - Key: CloudformationStackName
          Value: !Ref 'AWS::StackName'
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub '${AWS::StackName}ALB'
        - Key: ServiceProvider
          Value: Rackspace
      LoadBalancerAttributes: !If 
        - S3LogsEnabled
        - - Value: 'true'
            Key: access_logs.s3.enabled
          - Value: !If 
              - NewS3Bucket
              - !Ref S3BucketwithLogging
              - !Ref S3BucketName
            Key: access_logs.s3.bucket
          - Value: !Ref S3BucketPrefix
            Key: access_logs.s3.prefix
          - Value: !Ref DeletionProtection
            Key: deletion_protection.enabled
          - Value: !Ref TimeOut
            Key: idle_timeout.timeout_seconds
          - Value: !Ref Http2Enabled
            Key: routing.http2.enabled
        - - Value: 'false'
            Key: access_logs.s3.enabled
          - Value: !Ref DeletionProtection
            Key: deletion_protection.enabled
          - Value: !Ref TimeOut
            Key: idle_timeout.timeout_seconds
          - Value: !Ref Http2Enabled
            Key: routing.http2.enabled
      SecurityGroups: !Ref SecurityGroupList
      Scheme: !Ref Scheme
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Metadata:
      LogBucketPolicy: !If 
        - NewS3Bucket
        - !Ref ELBS3LoggingBucketPolicy
        - !Ref 'AWS::NoValue'
  TargetGroup:
    Properties:
      HealthyThresholdCount: !Ref HealthyThresholdCount
      HealthCheckIntervalSeconds: !Ref HealthCheckIntervalSeconds
      VpcId: !Ref VPCID
      HealthCheckPort: !Ref HealthCheckPort
      Name: !Ref TargetGroupName
      Tags:
        - Key: CloudformationStackName
          Value: !Ref 'AWS::StackName'
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub '${AWS::StackName}TargetGroup'
        - Key: ServiceProvider
          Value: Rackspace
      Targets:
        - !If 
          - UseTarget1
          - Id: !Ref TargetGroupTargetId1
            Port: !Ref TargetGroupTargetPort1
          - !Ref 'AWS::NoValue'
        - !If 
          - UseTarget2
          - Id: !Ref TargetGroupTargetId2
            Port: !Ref TargetGroupTargetPort2
          - !Ref 'AWS::NoValue'
        - !If 
          - UseTarget3
          - Id: !Ref TargetGroupTargetId3
            Port: !Ref TargetGroupTargetPort3
          - !Ref 'AWS::NoValue'
      HealthCheckProtocol: !Ref HealthCheckProtocol
      UnhealthyThresholdCount: !Ref UnhealthyThresholdCount
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckTimeoutSeconds: !Ref HealthCheckTimeoutSeconds
      TargetGroupAttributes:
        - Value: lb_cookie
          Key: stickiness.type
        - Value: !Ref CookieDuration
          Key: stickiness.lb_cookie.duration_seconds
        - Value: !Ref AttributeStickinessEnabled
          Key: stickiness.enabled
        - Value: !Ref AttributeDelayTimeout
          Key: deregistration_delay.timeout_seconds
      Matcher:
        HttpCode: !Ref MatcherCode
      Protocol: !Ref TargetGroupProtocol
      Port: !Ref TargetGroupPort
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
  UnHealthyHostCountAlarm:
    Properties:
      EvaluationPeriods: '10'
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt 
            - ELBv2
            - LoadBalancerFullName
        - Name: TargetGroup
          Value: !GetAtt 
            - TargetGroup
            - TargetGroupFullName
      AlarmDescription: >-
        Unhealthy Host count is greater than or equal to threshold, creating
        ticket.
      Namespace: AWS/ApplicationELB
      Period: '60'
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Statistic: Maximum
      Threshold: '1'
      Unit: Count
      MetricName: UnHealthyHostCount
      AlarmActions:
        - !If 
          - RackspaceAlarmsEnabled
          - !Sub >-
            arn:aws:sns:${AWS::Region}:${AWS::AccountId}:rackspace-support-emergency
          - !Ref 'AWS::NoValue'
      OKActions:
        - !If 
          - RackspaceAlarmsEnabled
          - !Sub >-
            arn:aws:sns:${AWS::Region}:${AWS::AccountId}:rackspace-support-emergency
          - !Ref 'AWS::NoValue'
    Type: 'AWS::CloudWatch::Alarm'
  ELBv2Listener1:
    Properties:
      Protocol: !Ref Listener1Protocol
      DefaultActions:
        - !If 
          - EnableRedirectListener1HTTPS
          - Type: redirect
            RedirectConfig:
              Protocol: HTTPS
              StatusCode: HTTP_301
          - TargetGroupArn: !Ref TargetGroup
            Type: forward
      SslPolicy: !If 
        - SSLPolicy1
        - !Ref Listener1SSLPolicy
        - !Ref 'AWS::NoValue'
      Certificates:
        - !If 
          - Listener1Certs
          - CertificateArn: !Ref Listener1SSL
          - !Ref 'AWS::NoValue'
      LoadBalancerArn: !Ref ELBv2
      Port: !Ref Listener1Port
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Condition: Listener1Enabled
  ELBv2Listener2:
    Properties:
      Protocol: !Ref Listener2Protocol
      DefaultActions:
        - !If 
          - EnableRedirectListener2HTTPS
          - Type: redirect
            RedirectConfig:
              Protocol: HTTPS
              StatusCode: HTTP_301
          - TargetGroupArn: !Ref TargetGroup
            Type: forward
      SslPolicy: !If 
        - SSLPolicy2
        - !Ref Listener2SSLPolicy
        - !Ref 'AWS::NoValue'
      Certificates:
        - !If 
          - Listener2Certs
          - CertificateArn: !Ref Listener2SSL
          - !Ref 'AWS::NoValue'
      LoadBalancerArn: !Ref ELBv2
      Port: !Ref Listener2Port
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Condition: Listener2Enabled
  InternalRecordSet:
    Properties:
      HostedZoneId: !Ref InternalZoneId
      Comment: !Sub 'Internal Record Set for ${InternalRecordName}'
      Name: !Sub '${InternalRecordName}.${InternalZoneName}.'
      Type: A
      AliasTarget:
        DNSName: !GetAtt 
          - ELBv2
          - DNSName
        HostedZoneId: !GetAtt 
          - ELBv2
          - CanonicalHostedZoneID
    Type: 'AWS::Route53::RecordSet'
    Condition: isInternalHostedZoneIdProvided
Outputs:
  UnHealthyHostCountAlarm:
    Description: UnHealthy Host Count Alarm Name.
    Value: !Ref UnHealthyHostCountAlarm
  ELBv2TargetGroup:
    Description: Default Target Group ARN for EC2 Instance deployments.
    Value: !Ref TargetGroup
  ELBv2TargetGroupName:
    Description: Default Target Group name.
    Value: !GetAtt 
      - TargetGroup
      - TargetGroupName
  ELBv2Listener1:
    Condition: Listener1Enabled
    Description: Application load balancer listener 1.
    Value: !Ref ELBv2Listener1
  ELBv2Listener2:
    Condition: Listener2Enabled
    Description: Application load balancer listener 2.
    Value: !Ref ELBv2Listener2
  ELBv2:
    Description: Application load balancer ID.
    Value: !Ref ELBv2
  ELBv2LoadBalancerFullName:
    Description: Full Loadbalancer Name.
    Value: !GetAtt 
      - ELBv2
      - LoadBalancerFullName
  S3BucketName:
    Condition: NewS3Bucket
    Description: S3 Logging Bucket Name.
    Value: !Ref S3BucketwithLogging
